import React from 'react';
import styled from 'styled-components';

const TeamContainer = styled.div<{ isDark: boolean }>`
  padding-top: 90px;
  min-height: 100vh;
  background-color: ${({ isDark }) => isDark ? '#1a1a1a' : '#ffffff'};
  color: ${({ isDark }) => isDark ? '#ffffff' : '#333333'};
`;

const TeamHeader = styled.div`
  text-align: center;
  padding: 60px 0;
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
`;

const TeamTitle = styled.h1`
  font-size: 3rem;
  font-weight: bold;
  margin-bottom: 20px;
  color: #333;
`;

const TeamSubtitle = styled.p`
  font-size: 1.2rem;
  color: #6c757d;
  max-width: 800px;
  margin: 0 auto;
  line-height: 1.6;
`;

const TeamContent = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  padding: 60px 20px;
`;

const TeamGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 40px;
  margin-top: 50px;
`;

const TeamMemberCard = styled.div<{ isDark: boolean }>`
  background-color: ${({ isDark }) => isDark ? '#2d2d2d' : '#ffffff'};
  border-radius: 20px;
  padding: 30px;
  text-align: center;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;

  &:hover {
    transform: translateY(-10px);
  }
`;

const MemberAvatar = styled.div`
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background: linear-gradient(135deg, #007bff, #6610f2);
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 20px;
  color: white;
  font-size: 3rem;
  font-weight: bold;
`;

const MemberName = styled.h3`
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 10px;
  color: #333;
`;

const MemberPosition = styled.div`
  font-size: 1.1rem;
  color: #007bff;
  font-weight: 500;
  margin-bottom: 15px;
`;

const MemberDescription = styled.p`
  color: #6c757d;
  line-height: 1.6;
  margin-bottom: 20px;
`;

const MemberSocial = styled.div`
  display: flex;
  justify-content: center;
  gap: 15px;
`;

const SocialLink = styled.a<{ isDark: boolean }>`
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: ${({ isDark }) => isDark ? '#404040' : '#f8f9fa'};
  display: flex;
  align-items: center;
  justify-content: center;
  color: ${({ isDark }) => isDark ? '#ffffff' : '#333333'};
  text-decoration: none;
  transition: all 0.3s ease;

  &:hover {
    background-color: #007bff;
    color: white;
    transform: scale(1.1);
  }
`;

const Team: React.FC = () => {
  const teamMembers = [
    {
      id: 1,
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
      position: 'CEO & –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å',
      description: '–≠–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –∫–æ–º–º–µ—Ä—Ü–∏–∏ —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –û—Å–Ω–æ–≤–∞–ª TechMarket –≤ 2015 –≥–æ–¥—É —Å —Ü–µ–ª—å—é —Å–¥–µ–ª–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è –≤—Å–µ—Ö.',
      avatar: 'üë®‚Äçüíº',
      social: ['linkedin', 'twitter', 'email']
    },
    {
      id: 2,
      name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
      position: 'CTO',
      description: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä —Å –≥–ª—É–±–æ–∫–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è IT-–ø—Ä–æ–µ–∫—Ç–∞–º–∏. –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏.',
      avatar: 'üë©‚Äçüíª',
      social: ['linkedin', 'github', 'email']
    },
    {
      id: 3,
      name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
      position: '–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
      description: '–û–ø—ã—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º —Å 10-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –ø—Ä–æ–¥–∞–∂.',
      avatar: 'üë®‚Äçüíº',
      social: ['linkedin', 'twitter', 'email']
    },
    {
      id: 4,
      name: '–ê–Ω–Ω–∞ –í–æ–ª–∫–æ–≤–∞',
      position: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É',
      description: '–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ —Å –æ–ø—ã—Ç–æ–º –≤ digital-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ. –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –±—Ä–µ–Ω–¥–∏–Ω–≥ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏.',
      avatar: 'üë©‚Äçüé®',
      social: ['linkedin', 'instagram', 'email']
    },
    {
      id: 5,
      name: '–°–µ—Ä–≥–µ–π –ú–æ—Ä–æ–∑–æ–≤',
      position: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
      description: '–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ä–≤–∏—Å–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–µ—à–µ–Ω–∏—é —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.',
      avatar: 'üë®‚Äçüîß',
      social: ['linkedin', 'email']
    },
    {
      id: 6,
      name: '–ï–ª–µ–Ω–∞ –°–æ–∫–æ–ª–æ–≤–∞',
      position: 'HR-–¥–∏—Ä–µ–∫—Ç–æ—Ä',
      description: '–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –∫—É–ª—å—Ç—É—Ä—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º. –°–æ–∑–¥–∞–µ—Ç –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é —Ä–∞–±–æ—á—É—é —Å—Ä–µ–¥—É.',
      avatar: 'üë©‚Äçüíº',
      social: ['linkedin', 'email']
    }
  ];

  const getSocialIcon = (type: string) => {
    switch (type) {
      case 'linkedin':
        return 'üíº';
      case 'twitter':
        return 'üê¶';
      case 'github':
        return 'üêô';
      case 'instagram':
        return 'üì∑';
      case 'email':
        return 'üìß';
      default:
        return 'üîó';
    }
  };

  return (
    <TeamContainer isDark={false}>
      <TeamHeader>
        <div className="container">
          <TeamTitle>–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞</TeamTitle>
          <TeamSubtitle>
            –ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–º–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç TechMarket 
            –≤–µ–¥—É—â–∏–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–º —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏
          </TeamSubtitle>
        </div>
      </TeamHeader>

      <TeamContent>
        <TeamGrid>
          {teamMembers.map((member) => (
            <TeamMemberCard key={member.id} isDark={false}>
              <MemberAvatar>{member.avatar}</MemberAvatar>
              <MemberName>{member.name}</MemberName>
              <MemberPosition>{member.position}</MemberPosition>
              <MemberDescription>{member.description}</MemberDescription>
              <MemberSocial>
                {member.social.map((socialType) => (
                  <SocialLink key={socialType} isDark={false} href="#">
                    {getSocialIcon(socialType)}
                  </SocialLink>
                ))}
              </MemberSocial>
            </TeamMemberCard>
          ))}
        </TeamGrid>
      </TeamContent>
    </TeamContainer>
  );
};

export default Team; 